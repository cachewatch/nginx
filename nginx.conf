# Change YOUR_TOKEN to your cachewatch token and uncomment that line if you want to cache urls and view crawl stats
# Change example.com (server_name) to your website url
# Change /path/to/your/root to the correct value

server {
    listen 80;
    server_name example.com;
 
    root   /path/to/your/root;
    index  index.html;

    location / {
        try_files $uri @cachewatch;
    }
 
    location @cachewatch {
        set $token YOUR_TOKEN;
        set $cachewatch 0;
        if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
            set $cachewatch 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $cachewatch 1;
        }
        if ($http_user_agent ~ "cachewatch") {
            set $cachewatch 0;
        }
        if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
            set $cachewatch 0;
        }
        
        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;
 
        if ($cachewatch = 1) {
            
            #setting cachewatch as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $cachewatch "service.cache.watch";
            rewrite .* /?protocol=$scheme&host=$host&query=$request_uri&acces_token=$token break;
            proxy_pass https://$cachewatch;
        }
        if ($cachewatch = 0) {
            rewrite .* /index.html break;
        }
    }
}